/**
 * Nunu Example API
 * This is a sample server celler server.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@swagger.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import GithubComGoNunuNunuLayoutAdvancedApiV1GetProfileResponse from '../model/GithubComGoNunuNunuLayoutAdvancedApiV1GetProfileResponse';
import GithubComGoNunuNunuLayoutAdvancedApiV1LoginRequest from '../model/GithubComGoNunuNunuLayoutAdvancedApiV1LoginRequest';
import GithubComGoNunuNunuLayoutAdvancedApiV1LoginResponse from '../model/GithubComGoNunuNunuLayoutAdvancedApiV1LoginResponse';
import GithubComGoNunuNunuLayoutAdvancedApiV1RegisterRequest from '../model/GithubComGoNunuNunuLayoutAdvancedApiV1RegisterRequest';
import GithubComGoNunuNunuLayoutAdvancedApiV1Response from '../model/GithubComGoNunuNunuLayoutAdvancedApiV1Response';
import GithubComGoNunuNunuLayoutAdvancedApiV1UpdateProfileRequest from '../model/GithubComGoNunuNunuLayoutAdvancedApiV1UpdateProfileRequest';

/**
*  service.
* @module api/DefaultApi
* @version 1.0.0
*/
export default class DefaultApi {

    /**
    * Constructs a new DefaultApi. 
    * @alias module:api/DefaultApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the loginPost operation.
     * @callback module:api/DefaultApi~loginPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GithubComGoNunuNunuLayoutAdvancedApiV1LoginResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 账号登录
     * @param {module:model/GithubComGoNunuNunuLayoutAdvancedApiV1LoginRequest} request params
     * @param {module:api/DefaultApi~loginPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GithubComGoNunuNunuLayoutAdvancedApiV1LoginResponse}
     */
    loginPost(request, callback) {
      let postBody = request;
      // verify the required parameter 'request' is set
      if (request === undefined || request === null) {
        throw new Error("Missing the required parameter 'request' when calling loginPost");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GithubComGoNunuNunuLayoutAdvancedApiV1LoginResponse;
      return this.apiClient.callApi(
        '/login', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the registerPost operation.
     * @callback module:api/DefaultApi~registerPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GithubComGoNunuNunuLayoutAdvancedApiV1Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 用户注册
     * 目前只支持邮箱登录
     * @param {module:model/GithubComGoNunuNunuLayoutAdvancedApiV1RegisterRequest} request params
     * @param {module:api/DefaultApi~registerPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GithubComGoNunuNunuLayoutAdvancedApiV1Response}
     */
    registerPost(request, callback) {
      let postBody = request;
      // verify the required parameter 'request' is set
      if (request === undefined || request === null) {
        throw new Error("Missing the required parameter 'request' when calling registerPost");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GithubComGoNunuNunuLayoutAdvancedApiV1Response;
      return this.apiClient.callApi(
        '/register', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the userGet operation.
     * @callback module:api/DefaultApi~userGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GithubComGoNunuNunuLayoutAdvancedApiV1GetProfileResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 获取用户信息
     * @param {module:api/DefaultApi~userGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GithubComGoNunuNunuLayoutAdvancedApiV1GetProfileResponse}
     */
    userGet(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Bearer'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GithubComGoNunuNunuLayoutAdvancedApiV1GetProfileResponse;
      return this.apiClient.callApi(
        '/user', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the userPut operation.
     * @callback module:api/DefaultApi~userPutCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GithubComGoNunuNunuLayoutAdvancedApiV1Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 修改用户信息
     * @param {module:model/GithubComGoNunuNunuLayoutAdvancedApiV1UpdateProfileRequest} request params
     * @param {module:api/DefaultApi~userPutCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GithubComGoNunuNunuLayoutAdvancedApiV1Response}
     */
    userPut(request, callback) {
      let postBody = request;
      // verify the required parameter 'request' is set
      if (request === undefined || request === null) {
        throw new Error("Missing the required parameter 'request' when calling userPut");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Bearer'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GithubComGoNunuNunuLayoutAdvancedApiV1Response;
      return this.apiClient.callApi(
        '/user', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
